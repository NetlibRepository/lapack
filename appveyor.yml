# Windows testing.
# Syntax for this file:
# http://www.appveyor.com/docs/appveyor-yml

shallow_clone: true

platform: x64

cache:
  - x86_64-4.9.2-release-win32-seh-rt_v4-rev4.7z
  - i686-4.9.2-release-win32-dwarf-rt_v4-rev4.7z

environment:
  global:
      APPVEYOR_SAVE_CACHE_ON_ERROR: true
      APPVEYOR_SKIP_FINALIZE_ON_EXIT: true
      TEST_TIMEOUT: 1000
      CONDA_INSTALL_LOCN: C:\\Miniconda36-x64
      CTEST_OUTPUT_ON_FAILURE: 1
  matrix:
    - ARCH=64
    - ARCH=32

install:
  # Add path, activate `conda` and update conda.
  - cmd: call %CONDA_INSTALL_LOCN%\Scripts\activate.bat
  - cmd: conda update --yes --quiet conda
  
  # Add our channels.
  - cmd: conda config --add channels defaults
  - cmd: conda config --add channels conda-forge
  - cmd: conda config --add channels isuruf/label/flang
  - cmd: conda install --yes --quiet clangdev flangdev

build_script:
  - echo "NUMBER_OF_PROCESSORS=%NUMBER_OF_PROCESSORS%"
  - set PATH=%CD%\%MINGW_DIR%\bin;%PATH%
  - flang --version
  - clang --version
  - cmake --version
  - if "%APPVEYOR_REPO_TAG%"=="true" (set CMAKE_BUILD_TYPE=Release) else (set CMAKE_BUILD_TYPE=Debug)
  - set SRC_DIR=%CD%
  - echo %SRC_DIR%
  - set BLD_DIR=%SRC_DIR%\..\lapack-appveyor-bld
  - set INST_DIR=%SRC_DIR%\..\lapack-appveyor-install
  - mkdir -p %BLD_DIR%
  - cd %BLD_DIR%
    # See issue #17 on github dashboard.  Once resolved, use -DCBLAS=ON
    #  - cmake -DCMAKE_INSTALL_PREFIX=${INST_DIR} -DLAPACKE=ON ${SRC_DIR}
  - cmake
    -G "NMake Makefiles" 
    -DCMAKE_C_COMPILER=clang-cl
    -DCMAKE_CXX_COMPILER=clang-cl
    -DCMAKE_Fortran_COMPILER=flang
    -DCMAKE_VERBOSE_MAKEFILE=ON
    -DCMAKE_BUILD_TYPE=Release
    -DBUILDNAME:STRING="appveyor-%MINGW_DIR%-%APPVEYOR_REPO_BRANCH%"
    -DCMAKE_BUILD_TYPE=%CMAKE_BUILD_TYPE%
    -DCMAKE_INSTALL_PREFIX=%INST_DIR%
    -DCBLAS:BOOL=ON
    -DLAPACKE:BOOL=ON
    -DBUILD_TESTING=ON
    -DLAPACKE_WITH_TMG:BOOL=ON
    %SRC_DIR%
  - cmake --build .

test_script:
  - ctest -D ExperimentalStart
  - ctest -D ExperimentalConfigure
  - ctest -D ExperimentalBuild -j%NUMBER_OF_PROCESSORS%
  - ctest -D ExperimentalTest --schedule-random -j%NUMBER_OF_PROCESSORS% --output-on-failure --timeout 100 -E "CBLAS\-.*cblat1"
  - ctest -D ExperimentalSubmit

after_test:
  - mingw32-make install -j%NUMBER_OF_PROCESSORS%
